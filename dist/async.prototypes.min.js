var AsynPrototypes;(()=>{var t={409:t=>{class e{static native_prototypes=null;static indexed_collections=[Array,Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,BigInt64Array,BigUint64Array,Float32Array,Float64Array];static init(){e.native_prototypes={};for(const t of e.indexed_collections)try{e.native_prototypes[t.name]={map:t.prototype.map,every:t.prototype.every,some:t.prototype.some,flatMap:t.prototype.flatMap,find:t.prototype.find,filter:t.prototype.filter,reduce:t.prototype.reduce,reduceRight:t.prototype.reduceRight,forEach:t.prototype.forEach}}catch(t){}}static registerAll(){null===e.native_prototypes&&e.init();for(const t of e.indexed_collections)try{t.prototype.map=e.map,t.prototype.every=e.every,t.prototype.some=e.some,t.prototype.find=e.find,t.prototype.filter=e.filter,t.prototype.reduce=e.reduce,t.prototype.reduceRight=e.reduceRight,t.prototype.forEach=e.forEach,"Array"===t.name&&(t.prototype.flatMap=e.flatMap)}catch(t){}}static unregisterAll(){for(const t of e.indexed_collections)try{const r=e.native_prototypes[t.name];t.prototype.map=r.map,t.prototype.every=r.every,t.prototype.some=r.some,t.prototype.flatMap=r.flatMap,t.prototype.find=r.find,t.prototype.filter=r.filter,t.prototype.reduce=r.reduce,t.prototype.reduceRight=r.reduceRight,t.prototype.forEach=r.forEach}catch(t){}}static hook(t){return null===e.native_prototypes&&e.init(),e.native_prototypes[t.constructor.name]&&(t.map=e.asyncMap.bind(t),t.every=e.asyncEvery.bind(t),t.some=e.asyncSome.bind(t),t.find=e.asyncFind.bind(t),t.filter=e.asyncFilter.bind(t),t.reduce=e.asyncReduce.bind(t),t.reduceRight=e.asyncReduceRight.bind(t),t.forEach=e.asyncForEach.bind(t),"Array"===t.constructor.name&&(t.flatMap=e.asyncFlatMap)),t}static unhook(t){return e.native_prototypes[t.constructor.name]&&(delete t.map,delete t.every,delete t.some,delete t.find,delete t.filter,delete t.reduce,delete t.reduceRight,delete t.forEach,"Array"===t.constructor.name&&delete t.flatMap),t}static async asyncEvery(t,e=void 0){for(let r=0;r<this.length;r++)if(!await t.call(e,this[r]))return!1;return!0}static every(t,r=void 0){return"Function"===t.constructor.name?e.native_prototypes[this.constructor.name].every.call(this,t,r):"AsyncFunction"===t.constructor.name?e.asyncEvery.call(this,t,r):void 0}static async asyncSome(t,e=void 0){for(let r=0;r<this.length;r++)if(await t.call(e,this[r]))return!0;return!1}static some(t,r=void 0){return"Function"===t.constructor.name?e.native_prototypes[this.constructor.name].some.call(this,t,r):"AsyncFunction"===t.constructor.name?e.asyncSome.call(this,t,r):void 0}static async asyncFind(t,e=void 0){for(let r=0;r<this.length;r++)if(await t.call(e,this[r]))return this[r]}static find(t,r=void 0){return"Function"===t.constructor.name?e.native_prototypes[this.constructor.name].find.call(this,t,r):"AsyncFunction"===t.constructor.name?e.asyncFind.call(this,t,r):void 0}static async asyncFilter(t,r=void 0){const o=await Promise.all(e.native_prototypes[this.constructor.name].map.call(this,t));return this.filter(((t,e)=>o[e]))}static filter(t,r=void 0){return"Function"===t.constructor.name?e.native_prototypes[this.constructor.name].filter.call(this,t,r):"AsyncFunction"===t.constructor.name?e.asyncFilter.call(this,t,r):void 0}static async asyncMap(t,r=void 0){const o=e.native_prototypes[this.constructor.name].map.call(this,t,r);for(const t in o)o[t]=await o[t];return o}static map(t,r=void 0){return"Function"===t.constructor.name?e.native_prototypes[this.constructor.name].map.call(this,t,r):"AsyncFunction"===t.constructor.name?e.asyncMap.call(this,t,r):void 0}static async asyncFlatMap(t,r=void 0){const o=e.native_prototypes[this.constructor.name].map.call(this,t,r);for(const t in o)o[t]=await o[t];return o.flat()}static flatMap(t,r=void 0){return"Function"===t.constructor.name?e.native_prototypes[this.constructor.name].flatMap.call(this,t,r):"AsyncFunction"===t.constructor.name?e.asyncFlatMap.call(this,t,r):void 0}static async asyncReduce(t,e){if(!this.length)throw TypeError("an array with no elements cannot be reduced.");for(let r=0;r<this.length;r++)e=0!==r||1!==arguments.length?await t.call(void 0,e,this[r],r,this):this[0];return e}static reduce(t,r){return"Function"===t.constructor.name?1===arguments.length?e.native_prototypes[this.constructor.name].reduce.call(this,t):e.native_prototypes[this.constructor.name].reduce.call(this,t,r):"AsyncFunction"===t.constructor.name?1===arguments.length?e.asyncReduce.call(this,t):e.asyncReduce.call(this,t,r):void 0}static async asyncReduceRight(t,e){if(!this.length)throw TypeError("an array with no elements cannot be reduced.");const r=this.length-1;for(let o=r;o>=0;o--)e=o!==r||1!==arguments.length?await t.call(void 0,e,this[o],o,this):this[r];return e}static reduceRight(t,r){return"Function"===t.constructor.name?1===arguments.length?e.native_prototypes[this.constructor.name].reduceRight.call(this,t):e.native_prototypes[this.constructor.name].reduceRight.call(this,t,r):"AsyncFunction"===t.constructor.name?1===arguments.length?e.asyncReduceRight.call(this,t):e.asyncReduceRight.call(this,t,r):void 0}static async asyncForEach(t,e=void 0){for(let r=0;r<this.length;r++)await t.call(e,this[r])}static forEach(t,r=void 0){return"Function"===t.constructor.name?e.native_prototypes[this.constructor.name].forEach.call(this,t,r):"AsyncFunction"===t.constructor.name?e.asyncForEach.call(this,t,r):void 0}}t.exports=e}},e={},r=function r(o){var n=e[o];if(void 0!==n)return n.exports;var c=e[o]={exports:{}};return t[o](c,c.exports,r),c.exports}(409);AsynPrototypes=r})();